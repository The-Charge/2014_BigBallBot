// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
CANJaguar* RobotMap::clockspringsMotor = NULL;
AnalogChannel* RobotMap::clockspringsEncoder = NULL;
CANJaguar* RobotMap::driveTrainFrontLeftMotor = NULL;
CANJaguar* RobotMap::driveTrainCenterLeftMotor = NULL;
CANJaguar* RobotMap::driveTrainRearLeftMotor = NULL;
CANJaguar* RobotMap::driveTrainFrontRightMotor = NULL;
CANJaguar* RobotMap::driveTrainCenterRightMotor = NULL;
CANJaguar* RobotMap::driveTrainRearRightMotor = NULL;
DoubleSolenoid* RobotMap::shifterShifterLeft = NULL;
DoubleSolenoid* RobotMap::shifterShifterRight = NULL;
Relay* RobotMap::airCompressorCompressorSpike = NULL;
DoubleSolenoid* RobotMap::pickupArmsLeftLongCylinder = NULL;
DoubleSolenoid* RobotMap::pickupArmsRightShortCylinder = NULL;
DoubleSolenoid* RobotMap::pickupArmsRigthLongCylinder = NULL;
DoubleSolenoid* RobotMap::pickupArmsLeftShortCylinder = NULL;
CANJaguar* RobotMap::throwerThrowerMotor = NULL;
AnalogChannel* RobotMap::throwerThrowerEncoder = NULL;
Servo* RobotMap::cameraCameraPanServo = NULL;
Servo* RobotMap::cameraCameraTiltServo = NULL;
CANJaguar* RobotMap::pickupWheelsRightPickupWheel = NULL;
CANJaguar* RobotMap::pickupWheelsLeftPickupWheel = NULL;
AnalogChannel* RobotMap::distanceUltrasonic = NULL;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
void RobotMap::init() {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	LiveWindow* lw = LiveWindow::GetInstance();
	clockspringsMotor = new CANJaguar(10);
	
	
	clockspringsEncoder = new AnalogChannel(1, 1);
	lw->AddSensor("Clocksprings", "Encoder", clockspringsEncoder);
	
	driveTrainFrontLeftMotor = new CANJaguar(2);
	
	
	driveTrainCenterLeftMotor = new CANJaguar(3);
	
	
	driveTrainRearLeftMotor = new CANJaguar(4);
	
	
	driveTrainFrontRightMotor = new CANJaguar(5);
	
	
	driveTrainCenterRightMotor = new CANJaguar(6);
	
	
	driveTrainRearRightMotor = new CANJaguar(7);
	
	
	shifterShifterLeft = new DoubleSolenoid(1, 1, 2);      
	
	
	shifterShifterRight = new DoubleSolenoid(1, 3, 4);      
	
	
	airCompressorCompressorSpike = new Relay(1, 1);
	lw->AddActuator("AirCompressor", "CompressorSpike", airCompressorCompressorSpike);
	
	pickupArmsLeftLongCylinder = new DoubleSolenoid(1, 5, 6);      
	
	
	pickupArmsRightShortCylinder = new DoubleSolenoid(1, 7, 8);      
	
	
	pickupArmsRigthLongCylinder = new DoubleSolenoid(2, 1, 2);      
	
	
	pickupArmsLeftShortCylinder = new DoubleSolenoid(2, 3, 4);      
	
	
	throwerThrowerMotor = new CANJaguar(11);
	
	
	throwerThrowerEncoder = new AnalogChannel(1, 4);
	lw->AddSensor("Thrower", "Thrower Encoder", throwerThrowerEncoder);
	
	cameraCameraPanServo = new Servo(1, 1);
	lw->AddActuator("Camera", "Camera Pan Servo", cameraCameraPanServo);
	
	cameraCameraTiltServo = new Servo(1, 2);
	lw->AddActuator("Camera", "Camera Tilt Servo", cameraCameraTiltServo);
	
	pickupWheelsRightPickupWheel = new CANJaguar(8);
	
	
	pickupWheelsLeftPickupWheel = new CANJaguar(12);
	
	
	distanceUltrasonic = new AnalogChannel(1, 2);
	lw->AddSensor("Distance", "Ultrasonic", distanceUltrasonic);
	
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	// Overwrite CAN Jaguar ID assignments to run code in Frisbee Bot.
	
	driveTrainFrontLeftMotor = new CANJaguar(2);
	driveTrainCenterLeftMotor = new CANJaguar(10);		// non-existant CAN ID
	driveTrainRearLeftMotor = new CANJaguar(12);
	driveTrainFrontRightMotor = new CANJaguar(8);
	driveTrainCenterRightMotor = new CANJaguar(9);		// non-existant CAN ID
	driveTrainRearRightMotor = new CANJaguar(16);
	
	driveTrainFrontLeftMotor->ConfigNeutralMode(CANJaguar::kNeutralMode_Coast);		// set Jag to "coast" when output = 0.0
	driveTrainCenterLeftMotor->ConfigNeutralMode(CANJaguar::kNeutralMode_Coast);		// set Jag to "coast" when output = 0.0
	driveTrainRearLeftMotor->ConfigNeutralMode(CANJaguar::kNeutralMode_Coast);		// set Jag to "coast" when output = 0.0
	driveTrainFrontRightMotor->ConfigNeutralMode(CANJaguar::kNeutralMode_Coast);		// set Jag to "coast" when output = 0.0
	driveTrainCenterRightMotor->ConfigNeutralMode(CANJaguar::kNeutralMode_Coast);		// set Jag to "coast" when output = 0.0
	driveTrainRearRightMotor->ConfigNeutralMode(CANJaguar::kNeutralMode_Coast);		// set Jag to "coast" when output = 0.0
	
/* Other systems on Fisbee Bot:
	//elevator
	const int ELEVATOR_MOTOR_ID = 4;
	const int ELEVATOR_MOTOR2_ID = 8;
	//shooter
	const int FRONT_SHOOTER_ID = 3;
	const int BACK_SHOOTER_ID = 7;
	//PWM ID'S USED
	const int LEFT_SHIFTER_ID = 1;
	const int RIGHT_SHIFTER_ID = 2;
	const int LEFT_FINGER_ID = 3;
	const int RIGHT_FINGER_ID = 4;
*/	
	
}
