// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#ifndef ROBOTMAP_H
#define ROBOTMAP_H
#include "WPILib.h"
/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
// Jan 22, 2014
class RobotMap {
public:
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	static Encoder* driveTrainRightEncoder;
	static CANJaguar* driveTrainFrontLeftMotor;
	static CANJaguar* driveTrainCenterLeftMotor;
	static CANJaguar* driveTrainRearLeftMotor;
	static CANJaguar* driveTrainFrontRightMotor;
	static CANJaguar* driveTrainCenterRightMotor;
	static CANJaguar* driveTrainRearRightMotor;
	static Encoder* driveTrainLeftEncoder;
	static DoubleSolenoid* shifterShifter;
	static Compressor* airCompressorAirCompressor;
	static DoubleSolenoid* pickupArmsLeftShortCylinder;
	static DoubleSolenoid* pickupArmsLeftLongCylinder;
	static DoubleSolenoid* pickupArmsRightShortCylinder;
	static DoubleSolenoid* pickupArmsRightLongCylinder;
	static CANJaguar* throwerThrowerMotor;
	static DigitalInput* throwerThrowerLimit;
	static CANJaguar* pickupWheelsRightPickupWheel;
	static CANJaguar* pickupWheelsLeftPickupWheel;
	static AnalogChannel* distanceUltrasonic;
	static DigitalOutput* lEDTeamNumber;
	static DigitalOutput* lEDTimer;
	static DigitalOutput* lEDDistance;
	static CANJaguar* clockspringsMotor;
	static AnalogChannel* clockspringsPot;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	static void init();
};
#endif
