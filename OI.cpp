// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "OI.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/AutoPreShoot.h"
#include "Commands/AutoPreShoot2.h"
#include "Commands/AutoShoot.h"
#include "Commands/AutonomousCommand.h"
#include "Commands/AutonomousGroup.h"
#include "Commands/CheckHot.h"
#include "Commands/ClockspringsHigh.h"
#include "Commands/ClockspringsLow.h"
#include "Commands/ClockspringsMed.h"
#include "Commands/CompressorRun.h"
#include "Commands/Drive.h"
#include "Commands/GetFeet.h"
#include "Commands/GetTensionerPosition.h"
#include "Commands/PickupArmsExtend.h"
#include "Commands/PickupArmsMidwayHi.h"
#include "Commands/PickupArmsMidwayLo.h"
#include "Commands/PickupArmsRetract.h"
#include "Commands/PickupWheelsForward.h"
#include "Commands/PickupWheelsOff.h"
#include "Commands/PickupWheelsReverseFast.h"
#include "Commands/PickupWheelsReverseSlow.h"
#include "Commands/ResetClockspringJags.h"
#include "Commands/ResetDriveJags.h"
#include "Commands/ResetJags.h"
#include "Commands/ResetPickupJags.h"
#include "Commands/ResetThrowerJags.h"
#include "Commands/SetBrakeMode.h"
#include "Commands/SetCoastMode.h"
#include "Commands/ShifterHigh.h"
#include "Commands/ShifterLow.h"
#include "Commands/Shoot.h"
#include "Commands/ShooterBlock.h"
#include "Commands/ShowDistance.h"
#include "Commands/ShowTeam.h"
#include "Commands/ShowTime.h"
#include "Commands/ThrowerShoot.h"
#include "Commands/ThrowerUp.h"
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
OI::OI() {
	// Process operator interface input here.
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	
	shootBtn = new DigitalIOButton(8);
	shootBtn->WhenPressed(new Shoot());
	pickupArmsRetractBtn = new DigitalIOButton(5);
	pickupArmsRetractBtn->WhenPressed(new PickupArmsRetract());
	pickupArmsExtendBtn = new DigitalIOButton(7);
	pickupArmsExtendBtn->WhileHeld(new PickupArmsExtend());
	pickupArmsMidwayLoBtn = new DigitalIOButton(6);
	pickupArmsMidwayLoBtn->WhenPressed(new PickupArmsMidwayLo());
	pickupWheelsReverseFastBtn = new DigitalIOButton(4);
	pickupWheelsReverseFastBtn->WhenPressed(new PickupWheelsReverseFast());
	pickupWheelsReverseSlowBtn = new DigitalIOButton(3);
	pickupWheelsReverseSlowBtn->WhenPressed(new PickupWheelsReverseSlow());
	pickupWheelsForwardBtn = new DigitalIOButton(2);
	pickupWheelsForwardBtn->WhenPressed(new PickupWheelsForward());
	pickupWheelsOffBtn = new DigitalIOButton(1);
	pickupWheelsOffBtn->WhenPressed(new PickupWheelsOff());
	shooterJoystick = new Joystick(2);
	
	driverJoystick = new Joystick(1);
	
	resetJagsBtn = new JoystickButton(driverJoystick, 11);
	resetJagsBtn->WhenPressed(new ResetJags());
	shiftHighButton = new JoystickButton(driverJoystick, 1);
	shiftHighButton->WhenPressed(new ShifterHigh());
	shiftLowButton = new JoystickButton(driverJoystick, 2);
	shiftLowButton->WhenPressed(new ShifterLow());
     
        // SmartDashboard Buttons
	SmartDashboard::PutData("AutonomousGroup", new AutonomousGroup());
	SmartDashboard::PutData("Show Time", new ShowTime());
	SmartDashboard::PutData("Show Distance", new ShowDistance());
	SmartDashboard::PutData("Show Team", new ShowTeam());
	SmartDashboard::PutData("Pickup Wheels Off", new PickupWheelsOff());
	SmartDashboard::PutData("Pickup Wheels Forward", new PickupWheelsForward());
	SmartDashboard::PutData("Pickup Wheels Reverse Slow", new PickupWheelsReverseSlow());
	SmartDashboard::PutData("Pickup Wheels Reverse Fast", new PickupWheelsReverseFast());
	SmartDashboard::PutData("Autonomous Command", new AutonomousCommand());
	SmartDashboard::PutData("Drive", new Drive());
	SmartDashboard::PutData("ShifterHigh", new ShifterHigh());
	SmartDashboard::PutData("ShifterLow", new ShifterLow());
	SmartDashboard::PutData("CompressorRun", new CompressorRun());
	SmartDashboard::PutData("Pickup Arms Extend", new PickupArmsExtend());
	SmartDashboard::PutData("Pickup Arms Retract", new PickupArmsRetract());
	SmartDashboard::PutData("Pickup Arms Midway Hi", new PickupArmsMidwayHi());
	SmartDashboard::PutData("Pickup Arms Midway Lo", new PickupArmsMidwayLo());
	SmartDashboard::PutData("Thrower Shoot", new ThrowerShoot());
	SmartDashboard::PutData("Thrower Up", new ThrowerUp());
	SmartDashboard::PutData("Clocksprings High", new ClockspringsHigh());
	SmartDashboard::PutData("Clocksprings Low", new ClockspringsLow());
	SmartDashboard::PutData("Reset Drive Jags", new ResetDriveJags());
	SmartDashboard::PutData("Reset Jags", new ResetJags());
	SmartDashboard::PutData("Check Hot", new CheckHot());
	SmartDashboard::PutData("AutoPreShoot", new AutoPreShoot());
	SmartDashboard::PutData("AutoShoot", new AutoShoot());
	SmartDashboard::PutData("Reset Clockspring Jags", new ResetClockspringJags());
	SmartDashboard::PutData("Reset Thrower Jags", new ResetThrowerJags());
	SmartDashboard::PutData("Reset Pickup Jags", new ResetPickupJags());
	SmartDashboard::PutData("GetFeet", new GetFeet());
	SmartDashboard::PutData("Clocksprings Med", new ClockspringsMed());
	SmartDashboard::PutData("Shoot", new Shoot());
	SmartDashboard::PutData("Shooter Block", new ShooterBlock());
	SmartDashboard::PutData("AutoPreShoot2", new AutoPreShoot2());
	SmartDashboard::PutData("Set Brake Mode", new SetBrakeMode());
	SmartDashboard::PutData("Set Coast Mode", new SetCoastMode());
	SmartDashboard::PutData("GetTensionerPosition", new GetTensionerPosition());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	showDistanceBtn = new DigitalIOButton(15);
	showDistanceBtn->WhenPressed(new ShowDistance());
	showTimeBtn = new DigitalIOButton(13);
	showTimeBtn->WhenPressed(new ShowTime());
	showTeamBtn = new DigitalIOButton(14);
	showTeamBtn->WhenPressed(new ShowTeam());
	shooterBlockBtn = new DigitalIOButton(9);
	shooterBlockBtn->WhenPressed(new ShooterBlock());
	clockspringsHiBtn = new DigitalIOButton(10);
	clockspringsHiBtn->WhenPressed(new ClockspringsHigh());
	clockspringsMedBtn = new DigitalIOButton(11);
	clockspringsMedBtn->WhenPressed(new ClockspringsMed());
	clockspringsLowBtn = new DigitalIOButton(12);
	clockspringsLowBtn->WhenPressed(new ClockspringsLow());
}
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
Joystick* OI::getShooterJoystick() {
	return shooterJoystick;
}
Joystick* OI::getDriverJoystick() {
	return driverJoystick;
}
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
	 
