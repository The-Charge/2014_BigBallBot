// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "PickupWheels.h"
#include "../Robotmap.h"
#include "../Commands/PickupWheelsOff.h"
#include "../Commands/PickupWheelsForward.h"
#include "../Commands/PickupWheelsReverseSlow.h"
#include "../Commands/PickupWheelsReverseFast.h"

const int PICKUP_SPEED_FAST_FORWARD = .6;
const int PICKUP_SPEED_FAST_REVERSE = -.6;
const int PICKUP_SPEED_SLOW_REVERSE = -.4;

PickupWheels::PickupWheels() : Subsystem("PickupWheels") {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	rightPickupWheel = RobotMap::pickupWheelsRightPickupWheel;
	leftPickupWheel = RobotMap::pickupWheelsLeftPickupWheel;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    Robot::netTable->PutNumber("PickupWheels::PickupSpeedSlowReverse", PICKUP_SPEED_SLOW_REVERSE);
    Robot::netTable->PutNumber("PickupWheels::PickupSpeedFastReverse", PICKUP_SPEED_FAST_REVERSE);
    Robot::netTable->PutNumber("PickupWheels::PickupSpeedFastForward", PICKUP_SPEED_FAST_FORWARD);
}
    
void PickupWheels::InitDefaultCommand() {
	// Set the default command for a subsystem here.
	//SetDefaultCommand(new MySpecialCommand());
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}
// Put methods for controlling this subsystem
// here. Call these from Commands.
void PickupWheels::SetOff()
{
	SetSpeed(0);
}
void PickupWheels::SetForward()
{
    float speed = Robot::netTable->GetNumber("PickupWheels::PickupSpeedFastForward", PICKUP_SPEED_FAST_FORWARD);
    SetSpeed(speed);
}
void PickupWheels::SetReverseSlow()
{
    float speed = Robot::netTable->GetNumber("PickupWheels::PickupSpeedSlowReverse", PICKUP_SPEED_SLOW_REVERSE);
    SetSpeed(speed);
}
void PickupWheels::SetReverseFast()
{
    float speed = Robot::netTable->GetNumber("PickupWheels::PickupSpeedFastReverse", PICKUP_SPEED_FAST_REVERSE);
    SetSpeed(speed);
}
void PickupWheels::SetSpeed(float speed)
{
	rightPickupWheel->Set(speed);
	leftPickupWheel->Set(-speed);
}
void PickupWheels::ResetJags() {
	rightPickupWheel->ConfigNeutralMode(CANJaguar::kNeutralMode_Brake);
	leftPickupWheel->ConfigNeutralMode(CANJaguar::kNeutralMode_Brake);
	rightPickupWheel->EnableControl();
	leftPickupWheel->EnableControl();	printf("RESET pickup JAGS \n");
}
