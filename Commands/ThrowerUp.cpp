// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "ThrowerUp.h"
ThrowerUp::ThrowerUp() {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::thrower);
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Robot::netTable->PutNumber("ThrowerUp::LeftBoundCock", LEFT_BOUND_COCK);
	Robot::netTable->PutNumber("ThrowerUp::RightBoundCock", RIGHT_BOUND_COCK);
}
// Called just before this Command runs the first time
void ThrowerUp::Initialize() {

	SetTimeout(.2);
}
// Called repeatedly when this Command is scheduled to run
void ThrowerUp::Execute() {

	Robot::thrower->Shoot();
}
// Make this return true when this Command no longer needs to run execute()
bool ThrowerUp::IsFinished() {
	float position = Robot::thrower->GetPosition();
	float leftBoundCock = Robot::netTable->GetNumber("ThrowerUp::LeftBoundCock",LEFT_BOUND_COCK);
	float rightBoundCock = Robot::netTable->GetNumber("ThrowerUp::RightBoundCock",RIGHT_BOUND_COCK);
	return (IsTimedOut() && ( position > leftBoundCock && position < rightBoundCock ));

}
// Called once after isFinished returns true
void ThrowerUp::End() {
	Robot::thrower->Stop();
}
// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void ThrowerUp::Interrupted() {
	Robot::thrower->Stop();
}
