// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
//
//
#include "DriveUntilXFeet.h"
DriveUntilXFeet::DriveUntilXFeet(float distance) {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::driveTrain);
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	_distance = distance;

	float p = Robot::netTable->GetNumber("DriveUntilXFeet::PID_P", DRIVEUNTILXFEET_PID_P);
	float i = Robot::netTable->GetNumber("DriveUntilXFeet::PID_I", DRIVEUNTILXFEET_PID_I);
	float d = Robot::netTable->GetNumber("DriveUntilXFeet::PID_D", DRIVEUNTILXFEET_PID_D);
	float tolerance = Robot::netTable->GetNumber("DriveUntilXFeet::PID_Tolerance", DRIVEUNTILXFEET_PID_TOLERANCE);
	controller = new PIDController(p,i,d, Robot::distance, Robot::driveTrain);
	controller->SetTolerance(tolerance);
}
// Called just before this Command runs the first time
void DriveUntilXFeet::Initialize() 
{
	Robot::driveTrain->Set(0);
	controller->SetSetpoint(_distance);
	controller->Enable();
	SetTimeout(5);
}
// Called repeatedly when this Command is scheduled to run
void DriveUntilXFeet::Execute() {
	
}
// Make this return true when this Command no longer needs to run execute()
bool DriveUntilXFeet::IsFinished() {
	return controller->OnTarget()||IsTimedOut();
}
// Called once after isFinished returns true
void DriveUntilXFeet::End() {
	Robot::driveTrain->Set(0);
	controller->Disable();
}
// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void DriveUntilXFeet::Interrupted() {
	End();
}
